@import '~base';

.members {
    .header {
        display: flex;
        flex-flow: column nowrap;

        > input[type=text] {
            background: none;
            border: none;
            border-bottom: @border;

            font-size: larger;
        }
    }

    .list {
        display: flex;
        flex-flow: row wrap;

        > * {
            display: flex;
            width: 50%;

            .media-screen-sm({
                width: 100%;
            });

            > * {
                display: flex;
                flex: 1;
            }
        }
    }
}

.member {
    .card() {
        background-color: @color-bg-card;
        box-shadow: @box-shadow;

        padding: @spacing-y @spacing-x;
        box-sizing: border-box;

        > * {
            &:first-child {
                margin-top: 0;
            }

            &:last-child {
                margin-bottom: 0;
            }
        }
    }

    .button {
        .card();

        display: flex;
        flex-flow: column nowrap;
        flex: 1;
    }

    > .button {
        margin: @spacing-y @spacing-x;
        cursor: pointer;
        transition: transform @duration-transition;

        &:hover, &:focus, &:active, &.open {
            transform: scale(1.05, 1.05);
        }
    }

    > .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: @z-index-modal;

        display: flex;
        align-items: center;
        justify-content: center;

        background-color: fade(@color-bg, 50%);
        cursor: pointer;

        transition: opacity @duration-enter-leave;

        > .content {
            .card();

            flex: 1;
            display: flex;
            flex-flow: column nowrap;

            max-width: @width-container-max;

            cursor: initial;

            > .button {
                background-color: none;
                box-shadow: none;
                padding: 0;
            }

            > .close {
                align-self: end;

                padding: 0 @spacing-x;

                cursor: pointer;

                transition-property: background-color, color;
                transition-duration: @duration-transition;

                &:after {
                    content: 'âœ•';
                }

                &:hover, &:focus {
                    background-color: @color-bg-hover;
                    color: @color-text-bg-hover;
                }

                &:active {
                    background-color: @color-bg-active;
                    color: @color-text-bg-active;
                }
            }
        }

        &.enter, &.leave.leaveActive {
            opacity: 0;
        }

        &.leave, &.enter.enterActive {
            opacity: 1;
        }
    }
}

